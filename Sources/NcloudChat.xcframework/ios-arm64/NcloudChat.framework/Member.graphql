mutation login(
        $projectId: String!
        $userId: String!
        $name: String
        $profile: String
        $customField: String
    ) {
    login(
        input: {
            projectId: $projectId
            userId: $userId
            name: $name
            profile: $profile
            customField: $customField
        }
    ) {
        token
    }
}

mutation createMemberBlock(
    $projectId: String!
    $memberId: String!
    $channelId: String
    $options: String
    ) {
    createMemberBlock(
        input: {
            projectId: $projectId
            memberId: $memberId
            channelId: $channelId
            options: $options
        }
    ) {
        memberBlock {
            id
            project_id
            member_id
            type
            status
            block_type
            reason
            messageMulti {
                lang
                value
                default
            }
            started_at
            ended_at
            created_at
            updated_at
            deleted_at
        }
    }
}

mutation deleteMemberBlock (
        $projectId: String!
        $memberId: String!
        $channelId: String
    ) {
    deleteMemberBlock(
        input: {
            projectId: $projectId
            memberId: $memberId
            channelId: $channelId
        }
    ) {
        memberBlock {
            id
            project_id
            member_id
            type
            status
            block_type
            reason
            messageMulti {
                lang
                value
                default
            }
            started_at
            ended_at
            created_at
            updated_at
            deleted_at
        }
    }
}

query membersForQuery (
    $projectId: String!,
    $option: String!,
    $filter: String!,
    $sort: String
    ) {
    membersForQuery (
        projectId: $projectId,
        option:$option,
        filter:$filter,
        sort:$sort
    ) {
        totalCount
        edges {
            node {
                id
                name
            }
        }
    }
}

mutation updateMember(
    $id: String!
    $projectId: String!
    $name: String
    $profile: String
    $adid: String
    $device: String
    $push:Boolean
    $network: String
    $version: String
    $model: String
    $notications: NoticationInput
  )
 {
    updateMember(input: {id: $id, projectId: $projectId, profile: $profile, name: $name, adid: $adid, device: $device, push:$push, network: $network, version: $version, model: $model, notications: $notications}) {
        member {
            id
            project_id
            name
            profile
            country
            memo
            remoteip
            adid
            device
            network
            push
            version
            model
            logined_at
            created_at
            updated_at
            notications {
                token
                device
                os
            }
        }
    }
}
